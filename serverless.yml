service: tennis-community-api-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  secrets: ${file(config.dev.yml)}

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "2"

provider:
  name: aws
  runtime: go1.x
  stage: ${self:custom.secrets.ENV}
  versionFunctions: false # dont store versions of all funcs

plugins:
  - serverless-prune-plugin # plugin to remove older versions from provider: sls prune -n 5
  - serverless-go-build

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

package:
  individually: true
  # exclude:
  #   - ./**
  # include:
  #   - ./bin/**

  ####################################################################################
  # UPLOADS FUNCTIONS
  ####################################################################################

functions:
  create_swing_upload:
    handler: entrypoints/create_swing_upload/create_swing_upload.go
    environment:
      UPLOADS_DB_NAME: ${self:custom.secrets.UPLOADS_DB_NAME}
      UPLOADS_DB_HOST: ${self:custom.secrets.UPLOADS_DB_HOST}
      UPLOADS_DB_USER: ${self:custom.secrets.UPLOADS_DB_USER}
      UPLOADS_DB_PWD: ${self:custom.secrets.UPLOADS_DB_PWD}
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: uploads
          method: post
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  get_recent_swing_uploads:
    handler: entrypoints/get_recent_swing_uploads/get_recent_swing_uploads.go
    environment:
      UPLOADS_DB_NAME: ${self:custom.secrets.UPLOADS_DB_NAME}
      UPLOADS_DB_HOST: ${self:custom.secrets.UPLOADS_DB_HOST}
      UPLOADS_DB_USER: ${self:custom.secrets.UPLOADS_DB_USER}
      UPLOADS_DB_PWD: ${self:custom.secrets.UPLOADS_DB_PWD}
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: uploads
          method: get
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  update_upload_clips:
    handler: entrypoints/update_upload_clips/update_upload_clips.go
    environment:
      UPLOADS_DB_NAME: ${self:custom.secrets.UPLOADS_DB_NAME}
      UPLOADS_DB_HOST: ${self:custom.secrets.UPLOADS_DB_HOST}
      UPLOADS_DB_USER: ${self:custom.secrets.UPLOADS_DB_USER}
      UPLOADS_DB_PWD: ${self:custom.secrets.UPLOADS_DB_PWD}
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}

  update_upload_swings:
    handler: entrypoints/update_upload_swings/update_upload_swings.go
    environment:
      UPLOADS_DB_NAME: ${self:custom.secrets.UPLOADS_DB_NAME}
      UPLOADS_DB_HOST: ${self:custom.secrets.UPLOADS_DB_HOST}
      UPLOADS_DB_USER: ${self:custom.secrets.UPLOADS_DB_USER}
      UPLOADS_DB_PWD: ${self:custom.secrets.UPLOADS_DB_PWD}
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}

  ####################################################################################
  # ALBUMS FUNCTIONS
  ####################################################################################

  get_album:
    handler: entrypoints/get_album/get_album.go
    environment:
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: albums/{id}
          method: get
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  create_album:
    handler: entrypoints/create_album/create_album.go
    environment:
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: albums
          method: post
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  delete_album:
    handler: entrypoints/delete_album/delete_album.go
    environment:
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: albums/{id}
          method: delete
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  get_user_albums:
    handler: entrypoints/get_user_albums/get_user_albums.go
    environment:
      UPLOADS_DB_NAME: ${self:custom.secrets.UPLOADS_DB_NAME}
      UPLOADS_DB_HOST: ${self:custom.secrets.UPLOADS_DB_HOST}
      UPLOADS_DB_USER: ${self:custom.secrets.UPLOADS_DB_USER}
      UPLOADS_DB_PWD: ${self:custom.secrets.UPLOADS_DB_PWD}
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: albums
          method: get
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  update_album:
    handler: entrypoints/update_album/update_album.go
    environment:
      UPLOADS_DB_NAME: ${self:custom.secrets.UPLOADS_DB_NAME}
      UPLOADS_DB_HOST: ${self:custom.secrets.UPLOADS_DB_HOST}
      UPLOADS_DB_USER: ${self:custom.secrets.UPLOADS_DB_USER}
      UPLOADS_DB_PWD: ${self:custom.secrets.UPLOADS_DB_PWD}
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: albums/{id}
          method: put
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  post_comment:
    handler: entrypoints/post_comment/post_comment.go
    environment:
      UPLOADS_DB_NAME: ${self:custom.secrets.UPLOADS_DB_NAME}
      UPLOADS_DB_HOST: ${self:custom.secrets.UPLOADS_DB_HOST}
      UPLOADS_DB_USER: ${self:custom.secrets.UPLOADS_DB_USER}
      UPLOADS_DB_PWD: ${self:custom.secrets.UPLOADS_DB_PWD}
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: albums/{id}/comments
          method: post
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  ####################################################################################
  # USERS FUNCTIONS
  ####################################################################################

  create_user:
    handler: entrypoints/create_user/create_user.go
    environment:
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      API_HOST: ${self:custom.secrets.API_HOST}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: users
          method: post
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  sign_in:
    handler: entrypoints/sign_in/sign_in.go
    environment:
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      API_HOST: ${self:custom.secrets.API_HOST}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: users/sign_in
          method: post
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  confirm_user:
    handler: entrypoints/confirm_user/confirm_user.go
    environment:
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      API_HOST: ${self:custom.secrets.API_HOST}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: users/{id}/confirm_user
          method: get
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  get_user:
    handler: entrypoints/get_user/get_user.go
    environment:
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      API_HOST: ${self:custom.secrets.API_HOST}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: users
          method: get
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  remove_notification:
    handler: entrypoints/remove_notification/remove_notification.go
    environment:
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      API_HOST: ${self:custom.secrets.API_HOST}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: users/remove_notification
          method: put
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  send_friend_req:
    handler: entrypoints/send_friend_req/send_friend_req.go
    environment:
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      API_HOST: ${self:custom.secrets.API_HOST}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: users/friends/{friendId}
          method: post
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  accept_friend_req:
    handler: entrypoints/accept_friend_req/accept_friend_req.go
    environment:
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      API_HOST: ${self:custom.secrets.API_HOST}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: users/friends/requests/{reqId}
          method: post
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  unfriend:
    handler: entrypoints/unfriend/unfriend.go
    environment:
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      API_HOST: ${self:custom.secrets.API_HOST}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: users/friends/{friendId}
          method: delete
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  search_friends:
    handler: entrypoints/search_friends/search_friends.go
    environment:
      USERS_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      USERS_DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      USERS_DB_USER: ${self:custom.secrets.USERS_DB_USER}
      USERS_DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      FROM_EMAIL: ${self:custom.secrets.FROM_EMAIL}
      EMAIL_PWD: ${self:custom.secrets.EMAIL_PWD}
      SMTP_HOST: ${self:custom.secrets.SMTP_HOST}
      SMTP_PORT: ${self:custom.secrets.SMTP_PORT}
      API_HOST: ${self:custom.secrets.API_HOST}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: users/friends/search
          method: put
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  ####################################################################################
  # MODERATION FUNCTIONS
  ####################################################################################

  create_comment_flag:
    handler: entrypoints/create_comment_flag/create_comment_flag.go
    environment:
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      MODERATION_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      MODERATION__DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      MODERATION__DB_USER: ${self:custom.secrets.USERS_DB_USER}
      MODERATION__DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: moderation/comments
          method: post
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  create_album_flag:
    handler: entrypoints/create_album_flag/create_album_flag.go
    environment:
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      MODERATION_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      MODERATION__DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      MODERATION__DB_USER: ${self:custom.secrets.USERS_DB_USER}
      MODERATION__DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: moderation/albums
          method: post
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  update_comment_flag:
    handler: entrypoints/update_comment_flag/update_comment_flag.go
    environment:
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      MODERATION_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      MODERATION__DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      MODERATION__DB_USER: ${self:custom.secrets.USERS_DB_USER}
      MODERATION__DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: moderation/comments/{id}
          method: put
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  update_album_flag:
    handler: entrypoints/update_album_flag/update_album_flag.go
    environment:
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      MODERATION_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      MODERATION__DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      MODERATION__DB_USER: ${self:custom.secrets.USERS_DB_USER}
      MODERATION__DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: moderation/albums/{id}
          method: put
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  recent_flagged_comments:
    handler: entrypoints/recent_flagged_comments/recent_flagged_comments.go
    environment:
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      MODERATION_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      MODERATION__DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      MODERATION__DB_USER: ${self:custom.secrets.USERS_DB_USER}
      MODERATION__DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: moderation/comments
          method: get
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"

  recent_flagged_albums:
    handler: entrypoints/recent_flagged_albums/recent_flagged_albums.go
    environment:
      ALBUMS_DB_NAME: ${self:custom.secrets.ALBUMS_DB_NAME}
      ALBUMS_DB_HOST: ${self:custom.secrets.ALBUMS_DB_HOST}
      ALBUMS_DB_USER: ${self:custom.secrets.ALBUMS_DB_USER}
      ALBUMS_DB_PWD: ${self:custom.secrets.ALBUMS_DB_PWD}
      MODERATION_DB_NAME: ${self:custom.secrets.USERS_DB_NAME}
      MODERATION__DB_HOST: ${self:custom.secrets.USERS_DB_HOST}
      MODERATION__DB_USER: ${self:custom.secrets.USERS_DB_USER}
      MODERATION__DB_PWD: ${self:custom.secrets.USERS_DB_PWD}
      JWT_KEY_PATH: ${self:custom.secrets.JWT_KEY_PATH}
      JWT_SECRET_PATH: ${self:custom.secrets.JWT_SECRET_PATH}
      ALLOWED_ORIGIN: ${self:custom.secrets.ALLOWED_ORIGIN}
    events:
      - http:
          path: moderation/albums
          method: get
          cors:
            origin: ${self:custom.secrets.ALLOWED_ORIGIN}
            allowCredentials: "true"
